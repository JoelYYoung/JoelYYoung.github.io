<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Methematical on Joel Yang</title>
    <link>https://joelyyoung.github.io/tags/methematical/</link>
    <description>Recent content in Methematical on Joel Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://joelyyoung.github.io/tags/methematical/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CS251 Introduction: What is Computer Science?</title>
      <link>https://joelyyoung.github.io/cs251-introduction-what-is-computer-science/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/cs251-introduction-what-is-computer-science/</guid>
      <description>Computer Science is no more about computers than astronomy is about telescopes.
&amp;ndash; Edsger Wybe Dijkstra
What about Mathematics? Before diving into the question of what is computer science, let&amp;rsquo;s deal with the question of what is mathematics first. Obviously it is a big question that no one would ever be confident to answer to. However, I still want to share some of my ideas of what mathematics is.</description>
    </item>
    
    <item>
      <title>CMU CS251 Great Ideas in Theoretical CS: Study Note 1</title>
      <link>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</guid>
      <description>Abstract I just walked through the Stanford CS103 course&amp;rsquo;s major slides and tried to fix some confusions of Automaton and Turing Machine in such a fulgural way. However, I found that I still felt not clear enough of come key ideas, so I guess maybe this is not a effective way to study something so tough like Theory of Computing. Therefore, I plan to relearn this content as a course, i.</description>
    </item>
    
    <item>
      <title>Methematical Fundations of Computing: Study Note of CS103</title>
      <link>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</guid>
      <description>Abstract Keywords: Computing Model, Finite Automata (FA or DFA), Undeterministic Finite Automata (UFA), Problem, Decision Problem, Function Problem, Turing Machine (TM), Language, Recognizable Language, Regular Language, Decidable Language
Above are the major topic that will be talked in this artical. And this artical is basically a digest of Stanford CS103 course slides, which ignores the proof of some conclusion and detailed explainations of some ideas, but just lists the critical conclusions and notions that are helpful for understanding Static Program Analysis.</description>
    </item>
    
  </channel>
</rss>
