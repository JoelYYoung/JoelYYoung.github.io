<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computing on Joel Yang</title><link>https://joelyyoung.github.io/tags/computing/</link><description>Recent content in Computing on Joel Yang</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 07 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://joelyyoung.github.io/tags/computing/index.xml" rel="self" type="application/rss+xml"/><item><title>CMU CS251 Great Ideas in Theoretical CS: Study Note 1</title><link>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</guid><description>&lt;h1 id="abstract">Abstract&lt;/h1>
&lt;p>I just walked through the Stanford CS103 course&amp;rsquo;s major slides and tried to fix some confusions of &lt;em>Automaton&lt;/em> and &lt;em>Turing Machine&lt;/em> in such a &lt;em>fulgural&lt;/em> way. However, I found that I still felt not clear enough of come key ideas, so I guess maybe this is not a effective way to study something so &lt;em>tough&lt;/em> like &lt;em>Theory of Computing&lt;/em>. Therefore, I plan to relearn this content &lt;strong>as a course&lt;/strong>, i.e., listening to vedios, taking notes, doing practices and assignments, and joining in some discussions.&lt;/p></description></item><item><title>Methematical Fundations of Computing: Study Note of CS103</title><link>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</guid><description>&lt;h1 id="abstract">Abstract&lt;/h1>
&lt;p>&lt;strong>Keywords&lt;/strong>: Computing Model, Finite Automata (FA or DFA), Undeterministic Finite Automata (UFA), Problem, Decision Problem, Function Problem, Turing Machine (TM), Language, Recognizable Language, Regular Language, Decidable Language&lt;/p>
&lt;p>Above are the major topic that will be talked in this artical. And this artical is basically a digest of &lt;a href="https://web.stanford.edu/class/archive/cs/cs103/cs103.1134/">Stanford CS103&lt;/a> course slides, which ignores the proof of some conclusion and detailed explainations of some ideas, but just lists the critical conclusions and notions that are helpful for understanding Static Program Analysis.&lt;/p></description></item></channel></rss>