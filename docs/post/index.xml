<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joel Yang</title>
    <link>https://joelyyoung.github.io/post/</link>
    <description>Recent content on Joel Yang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://joelyyoung.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static Program Analysis Reading Note: Chapter 5</title>
      <link>https://joelyyoung.github.io/static-program-analysis-reading-note-chapter5/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/static-program-analysis-reading-note-chapter5/</guid>
      <description>Static Program Analysis Reading Note: Chapter 5 Reference Static Program Analysis Chapter 5 SPA Slide 4 </description>
    </item>
    
    <item>
      <title>Static Program Analysis Reading Note: Chapter 4</title>
      <link>https://joelyyoung.github.io/static-program-analysis-reading-note-chapter4/</link>
      <pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/static-program-analysis-reading-note-chapter4/</guid>
      <description>Static Program Analysis Reading Note: Chapter 4 Basic Math Languages Def partial order: A set $S$ as well as a binary relation $R$ on $S$ that satisfies the following rules:
reflexivity: $\forall x \in S, x R x$. transitivity: $\forall x,y,z \in S, x R y \wedge y R z \rightarrow x R z$. anti-symmetry: $ \forall x, y \in S, x R y \wedge y R x \rightarrow x=y $ Note: If we denote a partial order, we usually refer to $S$ instead of $(S,R)$.</description>
    </item>
    
    <item>
      <title>CS251 Introduction: What is Computer Science?</title>
      <link>https://joelyyoung.github.io/cs251-introduction-what-is-computer-science/</link>
      <pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/cs251-introduction-what-is-computer-science/</guid>
      <description>Computer Science is no more about computers than astronomy is about telescopes.
&amp;ndash; Edsger Wybe Dijkstra
What about Mathematics? Before diving into the question of what is computer science, let&amp;rsquo;s deal with the question of what is mathematics first. Obviously it is a big question that no one would ever be confident to answer to. However, I still want to share some of my ideas of what mathematics is.</description>
    </item>
    
    <item>
      <title>CMU CS251 Great Ideas in Theoretical CS: Study Note 1</title>
      <link>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/cmu-cs251-great-ideas-in-theoretical/</guid>
      <description>Abstract I just walked through the Stanford CS103 course&amp;rsquo;s major slides and tried to fix some confusions of Automaton and Turing Machine in such a fulgural way. However, I found that I still felt not clear enough of come key ideas, so I guess maybe this is not a effective way to study something so tough like Theory of Computing. Therefore, I plan to relearn this content as a course, i.</description>
    </item>
    
    <item>
      <title>Methematical Fundations of Computing: Study Note of CS103</title>
      <link>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/methematical-fundations-of-computing-study-note/</guid>
      <description>Abstract Keywords: Computing Model, Finite Automata (FA or DFA), Undeterministic Finite Automata (UFA), Problem, Decision Problem, Function Problem, Turing Machine (TM), Language, Recognizable Language, Regular Language, Decidable Language
Above are the major topic that will be talked in this artical. And this artical is basically a digest of Stanford CS103 course slides, which ignores the proof of some conclusion and detailed explainations of some ideas, but just lists the critical conclusions and notions that are helpful for understanding Static Program Analysis.</description>
    </item>
    
    <item>
      <title>How to Use Hugo and GitHub Pages to Build Personal Blog</title>
      <link>https://joelyyoung.github.io/how-to-use-hugo-and-github-pages/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/how-to-use-hugo-and-github-pages/</guid>
      <description>My Needs I want to build a personal academic blog, which should contain:
A simple bio page that lists my CV, and publications. Pages of my blog articals, like technique articals and reading notes etc. Catagory and tag system to help me organize my published blog articals. Hugo + Github Pages = Perfect Solution Step1: Install Hugo Follow the Tutorial of Installation is enough. It provides 4 optional ways to install Hugo on Windows: downloading prebuilt binaries, use Chocolatey package manager, use docker image and run in docker, and build from source.</description>
    </item>
    
    <item>
      <title>Static Program Analysis Reading Note: Introduction</title>
      <link>https://joelyyoung.github.io/static-program-analysis-reading-note-introduction/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://joelyyoung.github.io/static-program-analysis-reading-note-introduction/</guid>
      <description>Target of SPA Target 1: To answer any none-trivial questions of a program at given program point, e.g.
Whether the judgement that x &amp;gt; const always true, i.e., invariant. What is the possible range of a number x? Target 2: To answer any questions of a program, e.g.
How much memory could the program consume? Whether the program terminates on all legal inputs? They concerns both &amp;ldquo;yes-or-no&amp;rdquo; questions and more general questions.</description>
    </item>
    
  </channel>
</rss>
